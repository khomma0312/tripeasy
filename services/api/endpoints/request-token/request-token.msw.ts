/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * tripeasy
 * TripeasyのAPI仕様書
 * OpenAPI spec version: 1.0.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  PostRequestToken200
} from '../../model'

export const getPostRequestTokenResponseMock = (overrideResponse: Partial< PostRequestToken200 > = {}): PostRequestToken200 => ({message: faker.string.alpha(20), ...overrideResponse})


export const getPostRequestTokenMockHandler = (overrideResponse?: PostRequestToken200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<PostRequestToken200> | PostRequestToken200)) => {
  return http.post('*/request-token', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getPostRequestTokenResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getRequestTokenMock = () => [
  getPostRequestTokenMockHandler()
]
